@using ShoppingCart.BackOffice.ViewsModels.Workflow
@using ShoppingCart.Models.Models.Entities
@model ShoppingCart.BackOffice.ViewsModels.Workflow.OneCartViewModel 


@if(Model.Options.Count != 0){
    <div class="row">
        <div class="col-md-4">
            <h3>Next step: </h3>
                @foreach (var o in Model.Options) {
                    @Html.ActionLink(o.type, "Reset", "BackOfficeWorkflow", new {id = Model.Cart.Id, newState = o.type}, new { @style = "color:white" , @class= "btn btn-info" })
                }
        </div>

        <div class="col-md-4">
            <h3>Default actions : </h3>
            @Html.ActionLink("Reset", "Reset", "BackOfficeWorkflow", new {id = Model.Cart.Id}, new { @style = "color:white" , @class= "btn btn-warning" })
            @Html.ActionLink("Drop", "Drop", "BackOfficeWorkflow", new {id = Model.Cart.Id}, new { @style = "color:white" , @class= "btn btn-danger" })
        </div>


    </div>
}else{
    <div> Worflow finished</div>
    <div> Cart status @Model.status</div>
    <div class="row">
        <div class="col-md-4">
            <h3>Default actions : </h3>
            @Html.ActionLink("Reset", "Reset", "BackOfficeWorkflow", new {id = Model.Cart.Id}, new { @style = "color:white" , @class= "btn btn-warning" })
            @Html.ActionLink("Drop", "Drop", "BackOfficeWorkflow", new {id = Model.Cart.Id}, new { @style = "color:white" , @class= "btn btn-danger" })
        </div>
    </div>
}