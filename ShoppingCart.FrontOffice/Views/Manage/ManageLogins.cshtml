@model ShoppingCart.ViewModels.ManageLoginsViewModel
@using Microsoft.Owin.Security
@{
    ViewBag.Title = "Manage your external logins";
}

<style>
    .socialnetwork-container-space2 {
        margin: 20px 0;
    }
</style>
<script>
    window.onload = function () {
        var button1 = document.getElementById("Google");
        button1.classList.add("btn-danger");
        var button2 = document.getElementById("Facebook");
        button2.classList.add("btn-primary");
        var button3 = document.getElementById("Microsoft");
        button3.classList.add("btn-default");
        var button4 = document.getElementById("Twitter");
        button4.classList.add("btn-info");
    }
</script>

<h2>@ViewBag.Title.</h2>

<p class="text-success">@ViewBag.StatusMessage</p>
@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (!loginProviders.Any()) {
        <div>
            <p>
                There are no external authentication services configured. See <a href="http://go.microsoft.com/fwlink/?LinkId=313242">this article</a>
                for details on setting up this ASP.NET application to support logging in via external services.
            </p>
        </div>
    }
    else
    {
        if (Model.CurrentLogins.Count > 0)
        {
            <h4>Registered Logins</h4>
            <table class="table">
                <tbody>
                    @foreach (var account in Model.CurrentLogins)
                    {
                        <tr>
                            <td>@account.LoginProvider</td>
                            <td>
                                @if (ViewBag.ShowRemoveButton)
                                {
                                    using (Html.BeginForm("RemoveLogin", "Manage"))
                                    {
                                        @Html.AntiForgeryToken()
                                        <div>
                                            @Html.Hidden("loginProvider", account.LoginProvider)
                                            @Html.Hidden("providerKey", account.ProviderKey)
                                            <input type="submit" class="btn btn-default" value="Remove" title="Remove this @account.LoginProvider login from your account" />
                                        </div>
                                    }
                                }
                                else
                                {
                                    @: &nbsp;
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        if (Model.OtherLogins.Count > 0)
        {
            using (Html.BeginForm("LinkLogin", "Manage"))
            {
                @Html.AntiForgeryToken()
                <div id="socialLoginList">
                <p>
                    @foreach (AuthenticationDescription p in Model.OtherLogins)
                    {
                        <div class="socialnetwork-container-space2">
                            <button type="submit" class="btn" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">
                                @switch (p.AuthenticationType)
                                {
                                    case "Facebook":
                                        <img src="~/Content/fb.png" />
                                        break;
                                    case "Google":
                                        <img src="~/Content/google.png" />
                                        break;
                                    case "Microsoft":
                                        <img src="~/Content/microsoft.png" />
                                        break;
                                    case "Twitter":
                                        <img src="~/Content/twitter.png" />
                                        break;
                                }
                                Login using @p.AuthenticationType
                            </button>
                        </div>
                    }
                </p>
                </div>
            }
        }
    }
}
